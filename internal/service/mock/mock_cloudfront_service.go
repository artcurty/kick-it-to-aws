// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/cloudfront_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	cloudfront "github.com/aws/aws-sdk-go-v2/service/cloudfront"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudFrontClient is a mock of CloudFrontClient interface.
type MockCloudFrontClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudFrontClientMockRecorder
}

// MockCloudFrontClientMockRecorder is the mock recorder for MockCloudFrontClient.
type MockCloudFrontClientMockRecorder struct {
	mock *MockCloudFrontClient
}

// NewMockCloudFrontClient creates a new mock instance.
func NewMockCloudFrontClient(ctrl *gomock.Controller) *MockCloudFrontClient {
	mock := &MockCloudFrontClient{ctrl: ctrl}
	mock.recorder = &MockCloudFrontClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudFrontClient) EXPECT() *MockCloudFrontClientMockRecorder {
	return m.recorder
}

// CreateInvalidation mocks base method.
func (m *MockCloudFrontClient) CreateInvalidation(ctx context.Context, params *cloudfront.CreateInvalidationInput, optFns ...func(*cloudfront.Options)) (*cloudfront.CreateInvalidationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateInvalidation", varargs...)
	ret0, _ := ret[0].(*cloudfront.CreateInvalidationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInvalidation indicates an expected call of CreateInvalidation.
func (mr *MockCloudFrontClientMockRecorder) CreateInvalidation(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvalidation", reflect.TypeOf((*MockCloudFrontClient)(nil).CreateInvalidation), varargs...)
}
